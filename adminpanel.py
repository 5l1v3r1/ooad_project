#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.14
# In conjunction with Tcl version 8.6
#    Feb 17, 2019 07:57:41 PM

import sys

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import adminpanel_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    top = Admin_Panel_ (root)
    adminpanel_support.init(root, top)
    root.mainloop()

w = None
def create_Admin_Panel_(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    top = Admin_Panel_ (w)
    adminpanel_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Admin_Panel_():
    global w
    w.destroy()
    w = None


class Admin_Panel_:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#d9d9d9' # X11 color: 'gray85' 
        font9 = "-family {Minion Pro SmBd} -size 9 -weight bold -slant"  \
            " roman -underline 0 -overstrike 0"
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("1160x808+362+119")
        top.title("Admin Panel ")
        top.configure(background="#2fd823")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")



        self.Label1 = Label(top)
        self.Label1.place(relx=0.07, rely=0.04, height=23, width=104)
        self.Label1.configure(background="#2fd823")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(text='''Manage Goods''')

        self.goodname = Label(top)
        self.goodname.place(relx=0.02, rely=0.12, height=27, width=91)
        self.goodname.configure(activebackground="#ddef64")
        self.goodname.configure(activeforeground="#000000")
        self.goodname.configure(background="#ced877")
        self.goodname.configure(disabledforeground="#a3a3a3")
        self.goodname.configure(font=font9)
        self.goodname.configure(foreground="#000000")
        self.goodname.configure(highlightbackground="#efa82d")
        self.goodname.configure(text='''Good Name :''')

        self.TEntry1 = ttk.Entry(top)
        self.TEntry1.place(relx=0.1, rely=0.12, relheight=0.03, relwidth=0.14)
        self.TEntry1.configure(takefocus="")
        self.TEntry1.configure(cursor="ibeam")

        self.goodcount = Label(top)
        self.goodcount.place(relx=0.02, rely=0.17, height=27, width=93)
        self.goodcount.configure(activebackground="#ef733e")
        self.goodcount.configure(background="#ced877")
        self.goodcount.configure(disabledforeground="#a3a3a3")
        self.goodcount.configure(font=font9)
        self.goodcount.configure(foreground="#000000")
        self.goodcount.configure(text='''Good Count :''')

        self.TEntry2 = ttk.Entry(top)
        self.TEntry2.place(relx=0.1, rely=0.17, relheight=0.03, relwidth=0.14)
        self.TEntry2.configure(takefocus="")
        self.TEntry2.configure(cursor="ibeam")

        self.Label4 = Label(top)
        self.Label4.place(relx=0.02, rely=0.22, height=27, width=85)
        self.Label4.configure(background="#ced877")
        self.Label4.configure(disabledforeground="#a3a3a3")
        self.Label4.configure(font=font9)
        self.Label4.configure(foreground="#000000")
        self.Label4.configure(text='''Good Price :''')

        self.TEntry3 = ttk.Entry(top)
        self.TEntry3.place(relx=0.1, rely=0.22, relheight=0.03, relwidth=0.14)
        self.TEntry3.configure(takefocus="")
        self.TEntry3.configure(cursor="ibeam")

        self.Label5 = Label(top)
        self.Label5.place(relx=0.03, rely=0.09, height=27, width=70)
        self.Label5.configure(background="#ced877")
        self.Label5.configure(disabledforeground="#a3a3a3")
        self.Label5.configure(font=font9)
        self.Label5.configure(foreground="#000000")
        self.Label5.configure(text='''Good ID :''')

        self.TEntry4 = ttk.Entry(top)
        self.TEntry4.place(relx=0.1, rely=0.09, relheight=0.03, relwidth=0.14)
        self.TEntry4.configure(takefocus="")
        self.TEntry4.configure(cursor="ibeam")

        self.TButton1 = ttk.Button(top)
        self.TButton1.place(relx=0.04, rely=0.27, height=87, width=218)
        self.TButton1.configure(command=adminpanel_support.addtodb)
        self.TButton1.configure(takefocus="")
        self.TButton1.configure(text='''Add to Database''')
        self.TButton1.configure(width=218)

        self.menubar = Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)



    @staticmethod
    def popup1(event, *args, **kwargs):
        Popupmenu1 = Menu(root, tearoff=0)
        Popupmenu1.configure(activebackground="#f9f9f9")
        Popupmenu1.configure(activeborderwidth="1")
        Popupmenu1.configure(activeforeground="black")
        Popupmenu1.configure(background="#d9d9d9")
        Popupmenu1.configure(borderwidth="1")
        Popupmenu1.configure(disabledforeground="#a3a3a3")
        Popupmenu1.configure(font="Arial 9")
        Popupmenu1.configure(foreground="black")
        Popupmenu1.post(event.x_root, event.y_root)

    @staticmethod
    def popup2(event, *args, **kwargs):
        Popupmenu2 = Menu(root, tearoff=0)
        Popupmenu2.configure(activebackground="#f9f9f9")
        Popupmenu2.configure(activeborderwidth="1")
        Popupmenu2.configure(activeforeground="black")
        Popupmenu2.configure(background="#d9d9d9")
        Popupmenu2.configure(borderwidth="1")
        Popupmenu2.configure(disabledforeground="#a3a3a3")
        Popupmenu2.configure(font="Arial 9")
        Popupmenu2.configure(foreground="black")
        Popupmenu2.post(event.x_root, event.y_root)






if __name__ == '__main__':
    vp_start_gui()


